---
swagger: "2.0"
info:
  version: "2017-11-17T20:44:14Z"
  title: "smallworld"
host: "6io70nu9pi.execute-api.us-east-1.amazonaws.com"
basePath: "/test"
schemes:
- "https"
paths:
  /:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "{\n    \"Welcome to the data challenge!\"\n}"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /check/{uni}/{testcaseid}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "uni"
        in: "path"
        required: true
        type: "string"
      - name: "testcaseid"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n\n#foreach($elem\
                \ in $inputRoot)\n  {\n    \"you are\" : \"$elem.uni\",\n    \"your\
                \ are at testcase\" : $elem.testcaseID,\n    \"your entered path \"\
                \ : [$elem.path],\n    \"total number of query on this test case\"\
                \ : $elem.nOfQueries\n  }#if($foreach.hasNext),#end\n\n#end\n"
          .*"404".*:
            statusCode: "404"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n\
                #set ($bodyObj = $util.parseJson($input.body))\n\n{\n\n\"error message\"\
                \ : \"$errorMessageObj.message\"\n\n}"
        requestTemplates:
          application/json: "{\n    \"operation\": \"read\",\n    \"tableName\": \"\
            countersv1\",\n    \"payload\": {\n        \"key\": {\n            \"\
            testcaseID\": \"$input.params('testcaseid')\",\n            \"uni\" :\
            \ \"$input.params('uni')\"\n        }\n    }\n}"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:smallworld/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /neighbors:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testcaseID"
        in: "query"
        required: false
        type: "string"
      - name: "node"
        in: "query"
        required: false
        type: "string"
      - name: "uni"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        422:
          description: "422 response"
        400:
          description: "400 response"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "\n  {\n    \"neighbors\" : [$input.path('$').Item.friends]\n\
                \n  }"
          .*"422".*:
            statusCode: "422"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"404".*:
            statusCode: "404"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"400".*:
            statusCode: "400"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
        requestTemplates:
          application/json: "{\n  \"operation\": \"readFriendship\",\n  \"tableName\"\
            : \"friendshipv5\",\n    \"payload\": {\n        \"item\": {\n       \
            \     \"uni\" : \"$input.params('uni')\",\n            \"testcaseID\"\
            : \"$input.params('testcaseID')\",\n            \"node\" : \"$input.params('node')\"\
            \n        }\n    }\n}"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:smallworld/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /oldneighbors:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testcaseID"
        in: "query"
        required: false
        type: "string"
      - name: "node"
        in: "query"
        required: false
        type: "string"
      - name: "uni"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        422:
          description: "422 response"
        400:
          description: "400 response"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "\n  {\n    \"neighbors\" : [$input.path('$').Item.friends]\n\
                \n  }"
          .*"422".*:
            statusCode: "422"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"404".*:
            statusCode: "404"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"400".*:
            statusCode: "400"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
        requestTemplates:
          application/json: "{\n  \"operation\": \"readFriendship\",\n  \"tableName\"\
            : \"friendshipv4\",\n    \"payload\": {\n        \"item\": {\n       \
            \     \"uni\" : \"$input.params('uni')\",\n            \"testcaseID\"\
            : \"$input.params('testcaseID')\",\n            \"node\" : \"$input.params('node')\"\
            \n        }\n    }\n}"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:emilyLambda/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /oldsubmit:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testcaseID"
        in: "query"
        required: false
        type: "string"
      - name: "path"
        in: "query"
        required: false
        type: "string"
      - name: "uni"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        422:
          description: "422 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\"hey\"\
                \ : \"you just submitted the following\",\r\n\"uni\" : \"$errorMessageObj.uni\"\
                ,\r\n\"testcaseID\" : \"$errorMessageObj.testcaseID\",\r\n\"path\"\
                \ : \"$errorMessageObj.path\"\r\n\r\n}"
          .*"422".*:
            statusCode: "422"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
        requestTemplates:
          application/json: "{\n    \"operation\": \"submit\",\n    \"tableName\"\
            : \"counters\",\n    \"payload\": {\n        \"item\":{\n            \"\
            uni\" : \"$input.params('uni')\",\n            \"testcaseID\" : \"$input.params('testcaseID')\"\
            ,\n            \"path\" : \"$input.params('path')\"\n        }\n    }\n\
            }"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:emilyLambda/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /start/{id}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n\n#foreach($elem\
                \ in $inputRoot)\n  {\n    \"reach testcase number\" : \"$elem.testcaseID\"\
                ,\n    \"source node\" : $elem.source,\n    \"target node\" : $elem.target,\n\
                \    \"wish you\" : \"best luck\"\n  }#if($foreach.hasNext),#end\n\
                \n#end\n"
          .*"404".*:
            statusCode: "404"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n\
                #set ($bodyObj = $util.parseJson($input.body))\n\n{\n\n\"error message\"\
                \ : \"$errorMessageObj.message\"\n\n}"
        requestTemplates:
          application/json: "{\n    \"operation\": \"read\",\n    \"tableName\": \"\
            testcasev2\",\n    \"payload\": {\n        \"key\": {\n            \"\
            testcaseID\": \"$input.params('id')\"\n        }\n    }\n}"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:smallworld/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /submit:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testcaseID"
        in: "query"
        required: false
        type: "string"
      - name: "path"
        in: "query"
        required: false
        type: "string"
      - name: "uni"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        422:
          description: "422 response"
        400:
          description: "400 response"
        500:
          description: "500 response"
        402:
          description: "402 response"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          .*"422".*:
            statusCode: "422"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"submisionAccepted".*:
            statusCode: "200"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\"hey\"\
                \ : \"you just submitted the following\",\r\n\"uni\" : \"$errorMessageObj.uni\"\
                ,\r\n\"testcaseID\" : \"$errorMessageObj.testcaseID\",\r\n\"path\"\
                \ : \"$errorMessageObj.path\"\r\n\r\n}"
          .*"404".*:
            statusCode: "404"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"400".*:
            statusCode: "400"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
          .*"internal server error".*:
            statusCode: "500"
            responseTemplates:
              application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\r\
                \n#set ($bodyObj = $util.parseJson($input.body))\r\n\r\n{\r\n\r\n\"\
                error message\" : \"$errorMessageObj.message\"\r\n\r\n}"
        requestTemplates:
          application/json: "{\n    \"operation\": \"submit\",\n    \"tableName\"\
            : \"countersv1\",\n    \"payload\": {\n        \"item\":{\n          \
            \  \"uni\" : \"$input.params('uni')\",\n            \"testcaseID\" : \"\
            $input.params('testcaseID')\",\n            \"path\" : \"$input.params('path')\"\
            \n        }\n    }\n}"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:722850008576:function:smallworld/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
